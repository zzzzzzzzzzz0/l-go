#!../bin/l a "b 'b" '  c  "c  "c  ' --。

定义1【无参】以“甲”。
定义2【无参】以“乙”。
定义3【无参】以“丙”。
定义4【无参】以“丁”。
显示(1234)换行。

赋予甲【标】【目】以甲。
解释下代码
	显示1。
	解释下代码
		显示2。
		解释下代码
			显示3。
			解释下代码
				显示4。
				赋予甲【目】以子。
			上代码。
		上代码。
	上代码。
上代码。
显示甲‘甲’换行。

定义甲以下代码
	显示(‘参数’)。
	1。
上代码。
显示甲甲甲甲甲甲。
甲甲甲甲甲甲。

显示先解释下代码
	1。
	显示a。
	如果那么先
		2+。
		显示b+。
	了否则先
		2-。
		显示b-。
	了。
	循环先
		3。
		显示c。
		如果那么先
			4+。
			显示d+。
			跳出。
		了否则先
			4-。
			显示d-。
			跳出。
		了。
	了。
	5。
	显示e。
上代码了换行。

定义\o/以下代码
	显示-‘字1’-‘字2’-‘字3’-‘字4’-‘字5’-换行。
上代码。
赋予字1、字2、字3、字4、字5以w、o、r、l、d。
\o/。
赋予字1、字2、字3、字4、字5以w。
\o/。
赋予字1、字2、字3、字4、字5以w、、r。
\o/。

定义让我以下代码
	解释‘参数1’。
上代码。
赋予2以（。）
让我下代码
	赋予1【上】【上】以让我那啥。
上代码。
显示2(‘2’)换行。显示1(‘1’)换行。

赋予3以3。
解释下代码
	显示(‘参数’)
上代码、1、22、‘3’‘3’‘3’。

赋予1以下代码
	显示(‘参数’)
上代码。
赋予2以下原样下原样
上原样上原样。
解释‘1’‘2’3、1、22、333。

定义甲以1。
解释“（甲）显示‘甲’换行。”。
解释下原样（甲）显示‘甲’换行。上原样。
解释下代码（甲）显示‘甲’换行。上代码。

赋予4以d。
赋予1以“
	1 2 3 ‘4’
”。
显示“(‘1’)”换行。
赋予1以下代码
	1 2 3 ‘4’
上代码。
显示“(‘1’)”换行。
赋予1以下原样
	1 2 3 ‘4’
上原样。
显示“(‘1’)”换行。

赋予1以a。
赋予2、‘1’3‘1’以‘1’2‘1’、3‘1’‘1’‘1’3。
显示‘2’换行‘‘1’3‘1’’换行。

赋予1、2、3以算术a。
显示“{1} ‘1’ {2} ‘2’ {3} ‘3’”换行。
赋予1、2、3以先算术a了。
显示“{1} ‘1’ {2} ‘2’ {3} ‘3’”换行。
赋予1、2、3以调用Substr、123、2、3。
显示“{1} ‘1’ {2} ‘2’ {3} ‘3’”换行。

解释下代码
	显示‘参数0【上】’、‘参数【上】’换行。
	解释下代码
		显示‘参数’换行。
	上代码、‘参数栈2’。
上代码。
解释下代码
	显示‘参数’换行。
上代码、‘参数栈2’。

定义哈以下代码
	赋予号【上】、错以算术‘参数1’。
	显示‘参数0’(‘参数数目’)‘参数’--。
	如果‘错’那么先
		显示‘错’换行。
		结束。
	了。
	显示‘号’换行。
上代码。
赋予号以0。
哈‘号’+1。
哈‘号’+1。
哈‘号’+1。
哈a。
显示不“显示”这句换行。

定义一【顶】以下代码
	显示“一”--‘参数’换行。
上代码。
定义二二以下代码
	显示‘参数0’--‘参数’换行。
上代码。
加载test-3.zs。

显示解释下代码
	赋予号以0。
	循环先
		赋予号以算术‘号’+1。
		“‘号’ ”。
		如果‘号’大于4那么跳出。
	了。
上代码。

定义一【顶】以下代码
	显示‘参数’换行。
上代码。
一1、22、333。

显示先加载test-2.zs、1、22、333了。

赋予码以下代码
	显示‘参数’换行。
上代码。
解释‘码’。
解释‘码’、1。
解释‘码’、1、22。

删除1。
赋予1以。
显示“存在1”{先存在1了}。
删除1。
显示“存在1”{先存在1了}。

赋予1以a。
赋予2以1。
显示‘1’{先存在1了}{先存在‘2’了}{先存在3了}换行。

赋予以。
赋予甲以甲。
别名乙以。
显示{‘甲’}{‘乙’}。
赋予甲以子。
别名乙以甲。
别名丙以乙。
显示{‘甲’}{‘乙’}{‘丙’}。

显示如果那么1否则2。

如果不1或者2小于3那么显示y否则显示n。

解释下代码
	显示‘参数’换行。
上代码、1、‘参数栈2’、2。

赋予号1（【锁】）以11。
解释下代码
	显示‘参数’换行‘参数’换行‘参数3’-‘参数2’-‘参数1’换行。
	显示号‘号’【上】=‘号‘号’【上】【】’换行。
	赋予号‘号’【上】以111。
上代码、先赋予号以1。1了、22、先如果那么+否则-了333、4444。
显示‘号1’换行。

赋予“1 2”以1 2。显示‘“1 2”’换行。

（显示“执行“ls .”。”换行。
显示执行“ls .”。

显示“‘参数0’ ‘参数’”换行
参数1=‘参数1’换行参数2=‘参数2’换行参数3=‘参数3’换行。
显示1先2。先3了先3先显示4。了了2。了1换行。）

赋予号以0。
循环一
先显示a了
先显示bb了
先
	赋予号以算术‘号’+1。
	显示“‘号’ ”。
	如果‘号’大于4那么跳出一。
了。
结束。

赋予号以a。
如果1‘号’‘号’大于2或者先大于‘号’4或者大于等于6了或者7并且8等于9那么显示y换行否则显示x换行。

显示
下原样
	1
		2 2 ‘333’
下原样
	1
		2 2 ‘333’
上原样
下代码
	1
		2 2 ‘333’
上代码
上原样
下代码
	1
		2 2 ‘333’
下代码
	1
		2 2 ‘333’
上代码
下原样
	1
		2 2 ‘333’
上原样
上代码
下原样“上原样下代码”上代码“下原样下代码”。
